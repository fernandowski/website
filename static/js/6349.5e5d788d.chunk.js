"use strict";(self.webpackChunkpersonal_website=self.webpackChunkpersonal_website||[]).push([[6349],{87230:(e,t,i)=>{i.d(t,{C:()=>p,b:()=>u});var s=i(81993),n=i(80883),r=i(3799),o=i(95756),a=i(58350),l=i(64839),h=i(32307),d=i(10773),c=i(66470);function u(e){const t=new h.N5,{vertex:i,fragment:u}=t;return(0,r.NB)(i,e),t.attributes.add(c.r.POSITION,"vec3"),t.attributes.add(c.r.UV0,"vec2"),t.varyings.add("vUV","vec2"),e.multipassEnabled&&t.varyings.add("depth","float"),i.code.add(l.H`
    void main(void) {
      vUV = uv0;
      ${e.multipassEnabled?"depth = (view * vec4(position, 1.0)).z;":""}
      gl_Position = proj * view * vec4(position, 1.0);
    }
  `),t.include(s.Q,e),u.uniforms.add(new o.G("size",(e=>e.size))),u.uniforms.add(new a.E("color1",(e=>e.color1))),u.uniforms.add(new a.E("color2",(e=>e.color2))),u.include(n.a),e.transparencyPassType===d.y.ColorAlpha&&(t.outputs.add("fragColor","vec4",0),t.outputs.add("fragAlpha","float",1)),u.code.add(l.H`
    void main() {
      ${e.multipassEnabled?"terrainDepthTest(depth);":""}
      vec2 uvScaled = vUV / (2.0 * size);

      vec2 uv = fract(uvScaled - 0.25);
      vec2 ab = clamp((abs(uv - 0.5) - 0.25) / fwidth(uvScaled), -0.5, 0.5);
      float fade = smoothstep(0.25, 0.5, max(fwidth(uvScaled.x), fwidth(uvScaled.y)));
      float t = mix(abs(ab.x + ab.y), 0.5, fade);

      fragColor = mix(color2, color1, t);
      ${e.transparencyPassType===d.y.ColorAlpha?l.H`
              fragColor = premultiplyAlpha(fragColor);
              fragAlpha = fragColor.a;`:""}
    }
  `),t}const p=Object.freeze(Object.defineProperty({__proto__:null,build:u},Symbol.toStringTag,{value:"Module"}))},24346:(e,t,i)=>{i.r(t),i.d(t,{default:()=>Je});var s=i(35143),n=i(91967),r=(i(81806),i(30726)),o=i(46053),a=i(76460),l=(i(47249),i(85842)),h=i(16159),d=i(2522),c=i(87562),u=i(68134),p=i(15941),g=i(24648),m=i(31633),_=i(19555),f=i(72745),v=i(20664),y=i(9392),w=i(55855),L=i(34111),M=i(9624),S=i(98510),C=i(14487);function A(e,t,i,s,n){(0,v.c)(P,e),(0,v.g)(V,e,t),(0,C.F)(P,i,P,n),(0,C.F)(V,i,V,n),(0,v.f)(s,V,P),(0,v.n)(s,s)}const P=(0,y.vt)(),V=(0,y.vt)();var b=i(64232),R=i(5568),x=i(38496),G=i(65658),D=i(93582),O=i(45097),E=i(94966),I=i(66678);function T(e,t,i,s){const n=z;return(0,v.c)(n.rings[0][0],e),(0,v.c)(n.rings[0][1],t),(0,v.c)(n.rings[0][2],i),(0,v.c)(n.rings[0][3],e),n.spatialReference=s,(0,I.P)(n)}const z={hasM:!1,hasZ:!0,rings:[[(0,y.vt)(),(0,y.vt)(),(0,y.vt)(),(0,y.vt)()]],spatialReference:null,type:"polygon"},W=(0,y.vt)();var F=i(80935),Z=i(78009),k=i(29772),U=i(23739),q=i(90659),H=i(41868);class N{get numVertices(){return this._length}get hasStagedVertex(){return this._hasCursorPoint}constructor(e){this.validMeasurement=!1,this.positionsWorld=[],this.positionsRender=[],this.positionsFittedWorld=[],this.positionsFittedRender=[],this.positionsGeodesic=[],this.positionsSpherical=[],this.positionsStereographic=[],this.pathSegmentLengths=[],this.geodesicPathSegmentLengths=[],this.perimeterSegmentLengths=[],this.intersectingSegments=new Set,this.geodesicIntersectingSegments=new Set,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.areaCentroidWorldCoords=(0,y.vt)(),this.areaCentroidRenderCoords=(0,y.vt)(),this.geodesicAreaCentroidRenderCoords=(0,y.vt)(),this.fittingMode=null,this.area=null,this.geodesicArea=null,this.pathLength=null,this.geodesicPathLength=null,this.perimeterLength=null,this._length=0,this._centroidRenderCoords=(0,y.vt)(),this._planeWorldCoords=(0,w.vt)(),this._worldUp=(0,y.vt)(),this._worldTangent=(0,y.vt)(),this._frame=[(0,y.vt)(),(0,y.vt)(),(0,y.vt)()],this._pathVersion=-1,this._hasCursorPoint=!1,this._mode=null,this._tempU=(0,y.vt)(),this._tempV=(0,y.vt)(),this._tempVec3=(0,y.vt)(),this._tempSphere=(0,D.c)(),this._sceneView=e;const t=(0,H.l)(e.spatialReference);this._measurementSR=t,this._lengthMeasurementUnit=(0,m._H)(t)??"meters",this._areaMeasurementUnit=(0,m.B5)(t)??"square-meters"}update(e,t,i,s,n,r){const o=null!=t,a=this._pathVersion===e.version,l=this._hasCursorPoint===o,h=this._mode===n;return!(a&&!r&&l&&h&&e.isValidPolygon)&&(this._pathVersion=e.version,this._hasCursorPoint=o,this._updateCursorSegmentLength(e,t),this._update(e,t,i,s,n),!0)}_update(e,t,i,s,n){const r=this._sceneView.renderSpatialReference,o=this._measurementSR,a=i.spatialReference;let l=e.numVertices;const h=!(null==t||t.equals(e.lastPoint)||l>2&&t.equals(e.firstPoint));h&&(l+=1);const d=!e.polygonIsClosed&&l>2,c=e.polygonIsClosed||d;this._resize(l);const u=(0,S.lO)(a),p=null!=a&&(0,q.yF)(a)?a:null,m=null!=p&&(0,M.canProjectWithoutEngine)(a,u),{positionsGeodesic:_,positionsWorld:f,positionsRender:y,positionsSpherical:w}=this,L=(e,t)=>{(function(e,t){t.hasZ||(t.z=(0,F.R1)(e,t,"ground")??0)})(i.elevationProvider,e),(0,b.g)(e,f[t],o),(0,b.g)(e,y[t],r),m&&((0,b.g)(e,_[t],p),(0,b.g)(e,w[t],u),(0,v.n)(w[t],w[t]))};e.forEachVertexPosition(((e,t)=>L(e,t))),h&&L(t,l-1);const C=this._updatePathLengths(c);if(this.pathLength=this._length>1?(0,g.d_)(C,this._lengthMeasurementUnit):null,m){const e=this._updateGeodesicPathLengths(c,p);this.geodesicPathLength=null!=e&&this._length>1?e:null}else this.geodesicPathLength=null;if(this._updateMode(n),!c)return this.area=null,this.geodesicArea=null,this.perimeterLength=null,this.triangleIndices=null,this.geodesicTriangleIndices=null,this.intersectingSegments.clear(),this.geodesicIntersectingSegments.clear(),void(this.validMeasurement=!1);this._updateAreaAndPerimeterLength(i,r,o,s),m&&this._updateGeodesicArea(i,p),this.validMeasurement=!0}getData(){return{validMeasurement:this.validMeasurement,numVertices:this.numVertices,hasStagedVertex:this.hasStagedVertex,positionsRender:this.positionsRender,positionsFittedWorld:this.positionsFittedWorld,positionsFittedRender:this.positionsFittedRender,intersectingSegments:this.intersectingSegments,geodesicIntersectingSegments:this.geodesicIntersectingSegments,triangleIndices:this.triangleIndices,geodesicTriangleIndices:this.geodesicTriangleIndices,areaCentroidRenderCoords:this.areaCentroidRenderCoords,geodesicAreaCentroidRenderCoords:this.geodesicAreaCentroidRenderCoords,area:this.area,geodesicArea:this.geodesicArea,pathLength:this.pathLength,geodesicPathLength:this.geodesicPathLength,perimeterLength:this.perimeterLength,actualMeasurementMode:this.actualMeasurementMode}}_resize(e){for(e<this._length&&(this.positionsWorld.length=e,this.positionsRender.length=e,this.positionsFittedWorld.length=e,this.positionsFittedRender.length=e,this.positionsGeodesic.length=e,this.positionsSpherical.length=e,this.positionsStereographic.length=e,this.pathSegmentLengths.length=e,this.geodesicPathSegmentLengths.length=e,this.perimeterSegmentLengths.length=e,this._length=e);this._length<e;)this.positionsWorld.push((0,y.vt)()),this.positionsRender.push((0,y.vt)()),this.positionsFittedWorld.push((0,f.vt)()),this.positionsFittedRender.push((0,y.vt)()),this.positionsGeodesic.push((0,y.vt)()),this.positionsSpherical.push((0,y.vt)()),this.positionsStereographic.push((0,f.vt)()),this.pathSegmentLengths.push(0),this.geodesicPathSegmentLengths.push(0),this.perimeterSegmentLengths.push(0),++this._length}_updatePathLengths(e){const t=this.positionsWorld,i=this.pathSegmentLengths;let s=0;const n=this._length;for(let r=0;r<n;++r){const o=i[r]=(0,v.p)(t[r],t[(r+1)%n]);(r<n-1||e)&&(s+=o)}return s}_updateGeodesicPathLengths(e,t){const i=this.positionsGeodesic,s=this.geodesicPathSegmentLengths;let n=0;const r=this._length;for(let o=0;o<r;++o){const a=(0,U.n3)(i[o],i[(o+1)%r],t);if(null==a)return null;const l=(0,g.kM)(a,"meters").value,h=s[o]=l;(o<r-1||e)&&(n+=h)}return(0,g.d_)(n,"meters")}_updateAreaAndPerimeterLength(e,t,i,s){const n=e.renderCoordsHelper,r=this.positionsWorld,o=this.positionsRender,a=this.positionsFittedWorld,l=this.positionsFittedRender,h=this._planeWorldCoords,d=this._centroidRenderCoords;(0,E.ix)(o,d),n.worldUpAtPosition(d,this._worldUp),n.worldBasisAtPosition(d,R._.X,this._worldTangent),A(d,this._worldUp,t,this._worldUp,i),A(d,this._worldTangent,t,this._worldTangent,i),r.length>2&&function(e,t){if(e.length<3)throw new Error("need at least 3 points to fit a plane");(0,E.e9)(e[0],e[1],e[2],t)}(r,h),this.fittingMode=this._selectFittingMode(h,r,this._worldUp,s);let c=0;if("horizontal"===this.fittingMode){let e=-1/0;o.forEach(((t,i)=>{const s=n.getAltitude(o[i]);s>e&&(e=s,c=i)}))}const u=r[c];let p=h,g=this._worldTangent;"horizontal"===this.fittingMode?p=this._worldUp:"vertical"===this.fittingMode&&(p=this._tempVec3,g=this._worldUp,(0,E.YH)(h,this._worldUp,p)),(0,v.c)(this._frame[2],p),(0,E.YH)(g,p,this._frame[0]),(0,v.b)(this._frame[1],this._frame[0],this._frame[2]),(0,v.k)(this._frame[1],this._frame[1]);const m=this._tempVec3,f=this._tempU,y=this._tempV;for(let w=0;w<this._length;++w){const e=a[w],s=l[w];(0,v.f)(m,r[w],u),(0,_.hZ)(e,(0,v.m)(this._frame[0],m),(0,v.m)(this._frame[1],m)),(0,v.j)(f,this._frame[0],e[0]),(0,v.j)(y,this._frame[1],e[1]),(0,v.g)(m,f,y),(0,v.g)(m,m,u),(0,C.F)(m,i,s,t)}this.perimeterLength=this._length>0?this._updatePerimeterLengths():null,(0,E.ix)(l,this.areaCentroidRenderCoords),(0,C.F)(this.areaCentroidRenderCoords,t,this.areaCentroidWorldCoords,i),this._updateIntersectingSegments(),this.area=0===this.intersectingSegments.size?this._computeArea():null}_updateGeodesicArea(e,t){const{renderCoordsHelper:i,spatialReference:s}=e,{positionsSpherical:n,positionsStereographic:r}=this,o=this._tempVec3,a=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,i=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const s=(e,t)=>{if(0===t[0]&&0===t[1]&&0===t[2])return!1;for(let i=0;i<e.length;++i)if((0,v.m)(t,e[i])<-1e-6)return!1;return!0};if(0===e.length)return!1;if(1===e.length)return t&&(0,v.c)(t,e[0]),!0;(0,v.s)(W,0,0,0);for(let n=0;n<e.length;++n)(0,v.g)(W,W,e[n]);if((0,v.n)(W,W),s(e,W))return t&&(0,v.c)(t,W),!0;if(!i)return!1;for(let n=0;n<e.length;++n)for(let i=0;i<e.length;++i)if(n!==i&&((0,v.b)(W,e[n],e[i]),(0,v.n)(W,W),s(e,W)))return t&&(0,v.c)(t,W),!0;return!1}(n,o);if(!a)return void(this.geodesicArea=null);const l=this._tempU,h=this._tempV;(0,E.VV)(o,l,h);for(let d=0;d<this._length;++d){const e=(0,v.m)(n[d],l),t=(0,v.m)(n[d],h),i=(0,v.m)(n[d],o);(0,_.hZ)(r[d],e/i,t/i)}(0,v.j)(o,o,(0,L.tO)(s).radius),i.toRenderCoords(o,(0,S.lO)(s),this.geodesicAreaCentroidRenderCoords),this._updateGeodesicIntersectingSegments(),this.geodesicArea=a&&0===this.geodesicIntersectingSegments.size?this._computeGeodesicArea(t):null}_updatePerimeterLengths(){const e=this.positionsFittedWorld,t=this.perimeterSegmentLengths;let i=0;for(let s=0;s<this._length;++s)i+=t[s]=(0,_.Io)(e[s],e[(s+1)%this._length]);return(0,g.d_)(i,this._lengthMeasurementUnit)}_updateIntersectingSegments(){const e=this.positionsFittedWorld,t=this.intersectingSegments;t.clear();for(let i=0;i<this._length;++i)for(let s=i+2;s<this._length;++s){if((s+1)%this._length===i)continue;const n=e[i],r=e[(i+1)%this._length],o=e[s],a=e[(s+1)%this._length];(0,G.Ql)(n,r,o,a)&&(t.add(i),t.add(s))}}_computeArea(){const e=this.positionsFittedWorld,t=this.triangleIndices=(0,x.Dg)((0,Z.lO)(e));let i=0;for(let s=0;s<t.length;s+=3)i+=(0,O.Fm)(e[t[s]],e[t[s+1]],e[t[s+2]]);return(0,g.gT)(i,this._areaMeasurementUnit)}_updateGeodesicIntersectingSegments(){const e=this.positionsStereographic,t=this.geodesicIntersectingSegments;t.clear();for(let i=0;i<this._length;++i)for(let s=i+2;s<this._length;++s){if((s+1)%this._length===i)continue;const n=e[i],r=e[(i+1)%this._length],o=e[s],a=e[(s+1)%this._length];(0,G.Ql)(n,r,o,a)&&(t.add(i),t.add(s))}}_computeGeodesicArea(e){const t=this.positionsGeodesic,i=this.positionsStereographic,s=this.geodesicTriangleIndices=(0,x.Dg)((0,Z.lO)(i));let n=0;for(let r=0;r<s.length;r+=3){const i=T(t[s[r]],t[s[r+1]],t[s[r+2]],e);if(null==i)return null;n+=(0,g.kM)(i,"square-meters").value}return(0,g.gT)(n,"square-meters")}_selectFittingMode(e,t,i,s){const n=t.map((t=>Math.abs(function(e,t){return(0,v.m)(e,t)+e[3]}(e,t)))).reduce(((e,t)=>Math.max(e,t)),0);!function(e,t){const i=(0,D.g)(t);(0,v.s)(i,0,0,0);for(let n=0;n<e.length;++n)(0,v.g)(i,i,e[n]);(0,v.j)(i,i,1/e.length);let s=0;for(let n=0;n<e.length;++n)s=Math.max(s,(0,v.a)(i,e[n]));t[3]=Math.sqrt(s)}(t,this._tempSphere);const r=n/(2*this._tempSphere[3]),o=r<s.maxRelativeErrorCoplanar,a=r<s.maxRelativeErrorAlmostCoplanar;let l="horizontal";return o?l="oblique":a&&(l=Math.abs((0,v.m)(i,e))>Math.cos((0,p.kU)(s.verticalAngleThreshold))?"horizontal":"vertical"),l}_updateCursorSegmentLength(e,t){const i=e.lastPoint;e.isValidPolygon||null==i||null==t?(this.geodesicStagedSegmentLength=null,this.stagedSegmentLength=null):(this.geodesicStagedSegmentLength=(0,U.Og)(i,t),this.stagedSegmentLength=(0,k.NH)(i,t)?.direct)}_updateMode(e){if(e===c.G.Auto){this.actualMeasurementMode="euclidean";let e=0;null!=this.geodesicPathLength&&(e+=this.geodesicPathLength.value),e>B&&(this.actualMeasurementMode="geodesic")}else this.actualMeasurementMode=e===c.G.Euclidean?"euclidean":"geodesic";null==this.geodesicPathLength&&(this.actualMeasurementMode="euclidean"),this._mode=e}}const B=1e5;let j=class extends n.A{constructor(e){super(e)}initialize(){this._measurementDataManager=new N(this.view),this.addHandles([this.analysisViewData.path.on("change",(()=>this._update())),(0,u.wB)((()=>this.analysisViewData.stagedPoint),(()=>this._update()),u.OH),(0,u.wB)((()=>this.analysisViewData.mode),(()=>this._update()),u.OH)]),this._update()}_update(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];const{analysisViewData:t,view:i}=this;this._measurementDataManager.update(t.path,t.stagedPoint,i,{maxRelativeErrorCoplanar:.005,maxRelativeErrorAlmostCoplanar:.01,verticalAngleThreshold:80},t.mode,e)&&(t.measurementData=this._measurementDataManager.getData())}};(0,s._)([(0,o.MZ)({constructOnly:!0})],j.prototype,"view",void 0),(0,s._)([(0,o.MZ)({constructOnly:!0})],j.prototype,"analysis",void 0),(0,s._)([(0,o.MZ)({constructOnly:!0})],j.prototype,"analysisViewData",void 0),j=(0,s._)([(0,l.$)("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementController")],j);var $=i(54099),Q=i(19247),J=i(2413),Y=i(17430),K=i(89238),X=i(974),ee=i(59833);let te=class extends $.A.EventedAccessor{constructor(){super(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}),this._version=0,this._internalGeometryChange=!1,this._extent=(0,J.Ie)()}set areaMeasurement(e){this._set("areaMeasurement",e),null!=e&&null!=this.view&&this._initialize(e,this.view)}set view(e){this._set("view",e),null!=e&&null!=this.areaMeasurement&&this._initialize(this.areaMeasurement,e)}get constructed(){return null!=this.areaMeasurement&&null!=this.view}get version(){return this._version}get isEmptyPolygon(){return!this.constructed||0===this._editGeometry.components.length}get isValidPolygon(){return this.constructed&&this.polygonIsClosed}get extent(){if(this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].vertices.length>0){const e=(0,J.Ie)(this._extent);return this.forEachVertex((t=>{(0,J.tK)(e,t.pos)})),e}return null}get spatialReference(){return this.constructed?this._editGeometry.coordinateHelper.spatialReference:null}_initialize(e,t){this.removeAllHandles(),this.addHandles((0,u.wB)((()=>e.geometry),(()=>{this._updateEditGeometryFromModelGeometry(e,t)}),u.pc)),this._makeDirty(!0)}_makeDirty(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this.notifyChange("polygonIsClosed"),this.notifyChange("isValidPolygon"),this.notifyChange("initialized"),this.notifyChange("extent"),e&&this.notifyChange("numVertices")}_updateEditGeometryFromModelGeometry(e,t){if(this._version++,this._internalGeometryChange)return;this.removeHandles("EditGeometry");let i=e.geometry;if(null!=i){const s=(0,M.tryProjectWithZConversion)(i,t.spatialReference);null==s&&(0,Y.V)(e,i.spatialReference,a.A.getLogger(this)),i=s}this._editGeometryOperations=null!=i?ee.p.fromGeometry(i,t.state.viewingMode):new ee.p(new X.ZE("polygon",(0,K.BV)(!0,!1,t.spatialReference)),t.state.viewingMode),this._makeDirty(!0),this.emit("change"),this.addHandles(this._editGeometry.on("change",(t=>{this._makeDirty(null!=t.addedVertices||null!=t.removedVertices),this._internalGeometryChange=!0,e.geometry=this.numVertices>0?this._editGeometry.geometry:null,this._internalGeometryChange=!1})),"EditGeometry")}get _editGeometry(){return this._editGeometryOperations.data}get vertices(){const e=[];return this.forEachVertex((t=>{e.push(t)})),e}get numVertices(){return this.constructed&&this._editGeometry.components.length>0?this._editGeometry.components[0].vertices.length:0}get polygonIsClosed(){return this._editGeometry.components.length>0&&this._editGeometry.components[0].isClosed()}get firstPoint(){if(this.constructed&&this._editGeometry.components.length>0){const e=this._editGeometry.components[0].getFirstVertex();if(null!=e)return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}return null}get lastPoint(){if(this.constructed&&this._editGeometry.components.length>0){const e=this._editGeometry.components[0].getLastVertex();if(null!=e)return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}return null}getVertex(e){if(!this.constructed||0===this._editGeometry.components.length||0===this._editGeometry.components[0].vertices.length)return null;const t=this._editGeometry.components[0].vertices[0];let i=t;do{if(i.index===e)return i;i=i.rightEdge.rightVertex}while(i!==t&&null!=i);return null}getVertexPositionAsPoint(e){return this._editGeometry.coordinateHelper.vectorToPoint(e.pos)}getVertexPositionAsPointFromIndex(e){return this._editGeometry.coordinateHelper.vectorToPoint(this.getVertex(e).pos)}forEachVertex(e){this.constructed&&this._editGeometry.components.length>0&&this._editGeometry.components[0].iterateVertices(e)}forEachVertexPosition(e){const t=this._editGeometry.coordinateHelper;this.forEachVertex(((i,s)=>{t.vectorToPoint(i.pos,ie),e(ie,s)}))}clear(){null!=this.areaMeasurement&&(this.areaMeasurement.geometry=null)}add(e){if(!this.constructed)return null;if(0===this._editGeometry.components.length){const e=this.view;this._editGeometry.components.push(new X.uA(e.spatialReference,e.state.viewingMode))}const t=this._editGeometryOperations.appendVertex(this._editGeometry.coordinateHelper.pointToVector(e));return this.emit("change"),t}close(){if(!this.constructed||0===this._editGeometry.components.length)return null;const e=this._editGeometryOperations.closeComponent(this._editGeometry.components[0]);return this.emit("change"),e}ensureContains(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",i=!1;if(this._editGeometry.components.forEach((t=>{t.iterateVertices((t=>{t===e&&(i=!0)}))})),!i)throw new Error(`vertex doesnt exist ${t}`);return i}setVertexPosition(e,t){if(!this.constructed)return null;const i=this._editGeometryOperations.setVertexPosition(e,this._editGeometry.coordinateHelper.pointToVector(t));return this.emit("change"),i}equals(e){if(this.numVertices!==e.numVertices)return!1;let t=!0;return this.forEachVertexPosition(((i,s)=>{const n=e.getVertexPositionAsPointFromIndex(s);i.equals(n)||(t=!1)})),!!t}};(0,s._)([(0,o.MZ)({value:null})],te.prototype,"areaMeasurement",null),(0,s._)([(0,o.MZ)({value:null})],te.prototype,"view",null),(0,s._)([(0,o.MZ)()],te.prototype,"isEmptyPolygon",null),(0,s._)([(0,o.MZ)()],te.prototype,"isValidPolygon",null),(0,s._)([(0,o.MZ)()],te.prototype,"extent",null),(0,s._)([(0,o.MZ)()],te.prototype,"spatialReference",null),(0,s._)([(0,o.MZ)()],te.prototype,"numVertices",null),(0,s._)([(0,o.MZ)()],te.prototype,"polygonIsClosed",null),te=(0,s._)([(0,l.$)("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementPathHelper")],te);const ie=new Q.A;i(11265);var se=i(59784),ne=i(11113),re=i(34761),oe=i(13191),ae=i(66747),le=i(7256),he=i(43047),de=i(32314),ce=i(50468),ue=i(51799),pe=i(45463),ge=i(66470),me=i(34981),_e=i(59696),fe=i(77730),ve=i(82809),ye=i(86401),we=i(63928),Le=i(16506),Me=i(42693),Se=i(32119),Ce=i(60322),Ae=i(28584),Pe=i(10773),Ve=i(87230),be=i(93345),Re=i(57162);class xe extends Me.w{initializeProgram(e){return new Ae.B(e.rctx,xe.shader.get().build(this.configuration),Se.D)}_setPipelineState(e){const t=this.configuration,i=e===Pe.y.NONE,s=e===Pe.y.FrontFace;return(0,Re.Ey)({blending:t.transparent?i?De:(0,Ce.ez)(e):null,depthTest:{func:(0,Ce.K_)(e)},depthWrite:i?t.writeDepth?Re.kn:null:(0,Ce.XO)(e),drawBuffers:(0,Ce.cl)(e),colorWrite:Re.wE,polygonOffset:i||s?t.polygonOffset?Ge:null:{factor:-1,units:-25}})}initializePipeline(){return this._setPipelineState(this.configuration.transparencyPassType)}}xe.shader=new Le.$(Ve.C,(()=>i.e(2028).then(i.bind(i,62028))));const Ge={factor:0,units:-25},De=(0,Re.p3)(be.dn.SRC_ALPHA,be.dn.ONE,be.dn.ONE_MINUS_SRC_ALPHA,be.dn.ONE_MINUS_SRC_ALPHA);var Oe=i(99415),Ee=i(92656);class Ie extends Ee.E{constructor(){super(...arguments),this.transparencyPassType=Pe.y.NONE,this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1,this.multipassEnabled=!1,this.cullAboveGround=!1}}(0,s._)([(0,Oe.W)({count:Pe.y.COUNT})],Ie.prototype,"transparencyPassType",void 0),(0,s._)([(0,Oe.W)()],Ie.prototype,"transparent",void 0),(0,s._)([(0,Oe.W)()],Ie.prototype,"writeDepth",void 0),(0,s._)([(0,Oe.W)()],Ie.prototype,"polygonOffset",void 0),(0,s._)([(0,Oe.W)()],Ie.prototype,"multipassEnabled",void 0),(0,s._)([(0,Oe.W)()],Ie.prototype,"cullAboveGround",void 0),(0,s._)([(0,Oe.W)({constValue:!1})],Ie.prototype,"occlusionPass",void 0);class Te extends we.W{constructor(e){super(e,new We),this.produces=new Map([[fe.N.OPAQUE_MATERIAL,e=>(0,me._o)(e)&&!this.parameters.transparent],[fe.N.TRANSPARENT_MATERIAL,e=>(0,me._o)(e)&&this.parameters.transparent&&this.parameters.writeDepth],[fe.N.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL,e=>(0,me._o)(e)&&this.parameters.transparent&&!this.parameters.writeDepth]]),this._configuration=new Ie}getConfiguration(e,t){return this._configuration.transparent=this.parameters.transparent,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.polygonOffset=this.parameters.polygonOffset,this._configuration.transparencyPassType=t.transparencyPassType,this._configuration.multipassEnabled=t.multipassEnabled,this._configuration.cullAboveGround=t.multipassTerrain.cullAboveGround,this._configuration}createGLMaterial(e){return new ze(e)}createBufferWriter(){return new ve.Z(ye.zK)}}class ze extends _e.A{beginSlot(e){return this.ensureTechnique(xe,e)}}class We extends pe.qA{constructor(){super(...arguments),this.size=(0,f.fA)(1,1),this.color1=(0,w.fA)(.75,.75,.75,1),this.color2=(0,w.fA)(.5,.5,.5,1),this.transparent=!1,this.writeDepth=!0,this.polygonOffset=!1}}class Fe extends de.X{constructor(e){super(e),this._checkerBoardMaterial=null,this._renderOccluded=pe.m$.OccludeAndTransparent,this._geometry=null,this._size=(0,f.fA)(1,1),this._color1=(0,w.fA)(1,.5,0,.5),this._color2=(0,w.fA)(1,1,1,.5),this.applyProperties(e)}get renderOccluded(){return this._renderOccluded}set renderOccluded(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}get geometry(){return this._geometry}set geometry(e){this._geometry=e,this.recreateGeometry()}get size(){return this._size}set size(e){(0,_.C)(this._size,e),this._updateMaterial()}get color1(){return this._color1}set color1(e){(0,he.a)(e,this._color1)||((0,he.c)(this._color1,e),this._updateMaterial())}get color2(){return this._color2}set color2(e){(0,he.a)(e,this._color2)||((0,he.c)(this._color2,e),this._updateMaterial())}_updateMaterial(){null!=this._checkerBoardMaterial&&this._checkerBoardMaterial.setParameters({size:this._size,color1:this._color1,color2:this._color2,renderOccluded:this._renderOccluded})}createExternalResources(){this._checkerBoardMaterial=new Te({size:this._size,color1:this._color1,color2:this._color2,transparent:!0,writeDepth:!1,polygonOffset:!0,renderOccluded:pe.m$.OccludeAndTransparent,isDecoration:this.isDecoration})}destroyExternalResources(){this._checkerBoardMaterial=null}forEachExternalMaterial(e){null!=this._checkerBoardMaterial&&e(this._checkerBoardMaterial)}createGeometries(e){if(null==this._geometry||null==this._checkerBoardMaterial)return;const t=Ze;(0,re.sC)(t,this.transform);const i=this._geometry,s=[],n=(0,y.vt)();i.position.forEach((e=>{(0,v.f)(n,e,t),s.push(n[0],n[1],n[2])}));const r=[];i.uv.forEach((e=>{r.push(e[0],e[1])}));const o=new ue.V(this._checkerBoardMaterial,[[ge.r.POSITION,new ce.n(s,i.triangleIndices,3,!0)],[ge.r.UV0,new ce.n(r,i.triangleIndices,2,!0)]]);e.addGeometry(o)}}const Ze=(0,y.vt)();var ke=i(25191),Ue=i(35925),qe=i(38042),He=i(63860);let Ne=class extends n.A{get _parameters(){const{accentColor:e,textColor:t}=this.view.effectiveTheme,i=(0,se.QP)(e),s=(0,se.f6)(e,.5),n=(0,se.f6)((0,se.bJ)(e),.5),r=(0,se.bJ)(t,se.pW.Low);return{accentColor:i,transparentAccentColor:s,transparentContrastColor:n,intersectingLineColor:[1,.2,0,1],textColor:t,textBackgroundColor:(0,se._L)(r,.6),textCalloutColor:(0,se._L)(r,.5),pathLineWidth:3,perimeterLineWidth:2,projectionLineWidth:2,projectionLineStippleSize:5,labelDistance:25}}get visible(){return this.analysisViewData.visible}get _renderUnits(){const e=this.view.renderCoordsHelper.spatialReference;return(0,m._H)(e)??"meters"}get testData(){}constructor(e){super(e),this._path=null,this._intersectedPath=null,this._perimeter=null,this._intersectedPerimeter=null,this._projectionLines=null,this._measurementArea=null,this._areaLabel=null,this._perimeterLengthLabel=null,this._pathSegments=[],this._perimeterSegments=[],this._origin=(0,y.vt)(),this._originTransform=(0,oe.vt)(),this.messages=null,this.viewData=$e,this.areaLabel=null,this.perimeterLengthLabel=null,this.loadingMessages=!0}initialize(){const{analysisViewData:e,_parameters:t,view:i}=this;this._path=new le.t({view:i,attached:!0,width:t.pathLineWidth,polygonOffset:!0,renderOccluded:pe.m$.OccludeAndTransparent,isDecoration:!0}),this._intersectedPath=new le.t({view:i,attached:!0,width:t.pathLineWidth,polygonOffset:!0,renderOccluded:pe.m$.OccludeAndTransparent,isDecoration:!0}),this._perimeter=new le.t({view:i,attached:!0,width:t.perimeterLineWidth,polygonOffset:!0,renderOccluded:pe.m$.OccludeAndTransparent,isDecoration:!0}),this._intersectedPerimeter=new le.t({view:i,attached:!0,width:t.perimeterLineWidth,color:t.intersectingLineColor,polygonOffset:!0,renderOccluded:pe.m$.OccludeAndTransparent,isDecoration:!0}),this._projectionLines=new le.t({view:i,attached:!0,width:t.projectionLineWidth,stipplePattern:(0,Ue.wk)(t.projectionLineStippleSize),polygonOffset:!0,renderOccluded:pe.m$.OccludeAndTransparent,isDecoration:!0}),this._measurementArea=new Fe({view:i,attached:!0,isDecoration:!0});const s={attached:!0,view:i,isDecoration:!0};this._areaLabel=new ae.N({...s,fontSize:je.Large}),this._perimeterLengthLabel=new ae.N({...s,fontSize:je.Small}),this.addHandles([(0,u.wB)((()=>[e.mode,this.visible,e.unit,e.measurementData,e.stagedPoint]),(()=>this._update()),u.pc),(0,u.wB)((()=>i.state?.camera),(()=>this._updateLabels()),u.pc),(0,qe.oQ)((()=>this._updateMessageBundle())),(0,u.wB)((()=>this._parameters),(e=>{let{accentColor:t,transparentAccentColor:i,transparentContrastColor:s,textColor:n,textBackgroundColor:r,textCalloutColor:o}=e;const{_path:a,_intersectedPath:l,_perimeter:h,_projectionLines:d,_measurementArea:c,_areaLabel:u,_perimeterLengthLabel:p}=this;a.color=t,l.color=t,h.color=t,d.color=t,c.color1=i,c.color2=s,u.textColor=n,u.backgroundColor=r,u.calloutColor=o,p.textColor=n,p.backgroundColor=r,p.calloutColor=o}),u.Vh)]),this._updateMessageBundle()}destroy(){this._measurementArea=(0,r.pR)(this._measurementArea),this._path=(0,r.pR)(this._path),this._intersectedPath=(0,r.pR)(this._intersectedPath),this._perimeter=(0,r.pR)(this._perimeter),this._intersectedPerimeter=(0,r.pR)(this._intersectedPerimeter),this._areaLabel=(0,r.pR)(this._areaLabel),this._perimeterLengthLabel=(0,r.pR)(this._perimeterLengthLabel),this._projectionLines=(0,r.pR)(this._projectionLines),this.set("view",null)}_update(){if(this.destroyed||!this.view.ready||!this.view.renderCoordsHelper)return;const{analysisViewData:{measurementData:e},analysisViewData:t}=this;null!=e&&(this._updateViewData(e,t.path),this._updateOrigin(),this._updatePathSegments(),this._updatePerimeterSegments(),this._updateArea(),this._updateProjectionLines(),this._updateLabels())}_updateViewData(e,t){const i=e.validMeasurement,s="geodesic"===e.actualMeasurementMode,n=s?e.geodesicArea:e.area;let r=1;if(n){const e=function(e,t){return(0,g.kM)(e,Be(e,t))}(n,this.analysisViewData.unit);r=(0,p.Vr)(Math.sqrt(e.value)/Math.sqrt(300)),r*=Math.sqrt((0,m.oU)(1,e.unit,"square-meters")),r=(0,m.oU)(r,"meters",this._renderUnits)}const o={validMeasurement:i,numVertices:e.numVertices,hasStagedVertex:e.hasStagedVertex,path:t,mode:e.actualMeasurementMode,positionsRender:e.positionsRender,positionsFittedWorld:e.positionsFittedWorld,positionsFittedRender:e.positionsFittedRender,intersectingSegments:s?e.geodesicIntersectingSegments:e.intersectingSegments,triangleIndices:s?e.geodesicTriangleIndices:e.triangleIndices,areaCentroid:s?e.geodesicAreaCentroidRenderCoords:e.areaCentroidRenderCoords,perimeterLengthLabelSegmentIndex:0,area:s?e.geodesicArea:e.area,pathLength:s?e.geodesicPathLength:e.pathLength,perimeterLength:e.perimeterLength,checkerSize:r};this._set("viewData",o)}_updateOrigin(){const e=this.viewData;(0,E.ix)(e.positionsRender,this._origin),(0,re.kN)(this._originTransform,this._origin),this._measurementArea.transform=this._originTransform,this._projectionLines.transform=this._originTransform}_createSegments(e){const t=this.viewData,i=this.view.renderCoordsHelper.spatialReference,s=t.mode,n=[],r=[],o=[],a=t.numVertices,l=t.validMeasurement?a:a-1;for(let d=0;d<l;++d){const l=t[e][d],h=t[e][(d+1)%a];let c=null;switch(s){case"euclidean":c=new ke.C(l,h);break;case"geodesic":c=new ke.J(l,h,i)}t.intersectingSegments.has(d)?o.push(c):r.push(c),n.push(c)}let h=null;return t.validMeasurement&&t.hasStagedVertex&&l>=2?h=n[n.length-2]:t.hasStagedVertex&&l>=1&&(h=n[n.length-1]),{all:n,nonIntersecting:r,intersecting:o,stagedSegment:h}}_updatePathSegments(){const{visible:e}=this,t=this._createSegments("positionsRender");this._path.setGeometryFromSegments(t.nonIntersecting,this._origin),this._path.visible=e,this._intersectedPath.setGeometryFromSegments(t.intersecting,this._origin),this._intersectedPath.visible=e,this._pathSegments=t.all}_updatePerimeterSegments(){const e=this.visible&&"euclidean"===this.viewData.mode,t=this._createSegments("positionsFittedRender");this._perimeter.setGeometryFromSegments(t.nonIntersecting,this._origin),this._perimeter.visible=e,this._intersectedPerimeter.setGeometryFromSegments(t.intersecting,this._origin),this._intersectedPerimeter.visible=e,this._perimeterSegments=t.all}_updateArea(){const e=this.viewData;switch(e.mode){case"euclidean":this._updateAreaEuclidean(e);break;case"geodesic":this._updateAreaGeodesic()}}_updateAreaEuclidean(e){const t=this.visible;e.validMeasurement&&0===e.intersectingSegments.size&&e.triangleIndices?(this._measurementArea.geometry={uv:e.positionsFittedWorld,position:e.positionsFittedRender,triangleIndices:e.triangleIndices},this._measurementArea.size=[e.checkerSize,e.checkerSize],this._measurementArea.visible=t):this._measurementArea.visible=!1}_updateAreaGeodesic(){this._measurementArea.visible=!1}_updateProjectionLines(){const e=this.viewData,t=this.visible,i=e.mode,s=e.numVertices;if(s>0&&e.validMeasurement&&"euclidean"===i){const i=[];for(let t=0;t<s;++t){const s=(0,y.vt)();(0,v.f)(s,e.positionsRender[t],this._origin);const n=(0,y.vt)();(0,v.f)(n,e.positionsFittedRender[t],this._origin),i.push([s,n])}this._projectionLines.geometry=i,this._projectionLines.visible=t}else this._projectionLines.geometry=null,this._projectionLines.visible=!1}_updateLabels(){if(this.destroyed)return;const{viewData:e}=this,{area:t,path:i}=e;if(!i)return;const s=this.visible,n=function(e,t,i){return e&&t&&(0,ne.zJ)(e,t,Be(t,i))}(this.messages,t,this.analysisViewData.unit);if(null!=n?(this._areaLabel.geometry={type:"point",point:e.areaCentroid},this._areaLabel.text=n,this._areaLabel.visible=e.validMeasurement&&0===e.intersectingSegments.size&&s):this._areaLabel.visible=!1,this._set("areaLabel",n),e.validMeasurement&&0===e.intersectingSegments.size){const t="geodesic"===e.mode||!e.validMeasurement,i=t?e.pathLength:e.perimeterLength,n=function(e,t,i){return e&&t&&(0,ne.zJ)(e,t,function(e,t){const i=function(e){switch(e){case"metric":case"ares":case"hectares":return"metric";case"imperial":case"acres":return"imperial";case"square-inches":return"inches";case"square-feet":return"feet";case"square-yards":return"yards";case"square-miles":return"miles";case"square-us-feet":return"us-feet";case"square-millimeters":return"millimeters";case"square-centimeters":return"centimeters";case"square-decimeters":return"decimeters";case"square-meters":return"meters";case"square-kilometers":return"kilometers"}throw new Error("unhandled area unit")}(t);switch(i){case"metric":return(0,m.x0)(e.value,e.unit);case"imperial":return(0,m.OU)(e.value,e.unit);default:return i}}(t,i))}(this.messages,i,this.analysisViewData.unit);this._set("perimeterLengthLabel",n),this._perimeterLengthLabel.distance=this._parameters.labelDistance,this._perimeterLengthLabel.anchor="top",this._perimeterLengthLabel.text=n,this._perimeterLengthLabel.visible=!0;let r=!0;for(let s=0;s<e.numVertices;++s){const i=(e.perimeterLengthLabelSegmentIndex+s)%e.numVertices,n=t?this._pathSegments[i]:this._perimeterSegments[i];if(r=!0,this._perimeterLengthLabel.geometry={type:"segment",segment:n,sampleLocation:"center"},!this._perimeterLengthLabel.overlaps(this._areaLabel))break;r=!1}this._perimeterLengthLabel.visible=r&&s}else this._perimeterLengthLabel.visible=!1}_updateMessageBundle(){this.loadingMessages=!0,(0,He.ud)("esri/core/t9n/Units").then((e=>{this.messages=e,this.view&&this._update()})).finally((()=>{this.loadingMessages=!1}))}};function Be(e,t){switch(t){case"metric":return(0,m.wv)(e.value,e.unit);case"imperial":return(0,m.TL)(e.value,e.unit);default:return t}}var je;(0,s._)([(0,o.MZ)()],Ne.prototype,"_parameters",null),(0,s._)([(0,o.MZ)()],Ne.prototype,"view",void 0),(0,s._)([(0,o.MZ)()],Ne.prototype,"messages",void 0),(0,s._)([(0,o.MZ)()],Ne.prototype,"analysis",void 0),(0,s._)([(0,o.MZ)()],Ne.prototype,"viewData",void 0),(0,s._)([(0,o.MZ)()],Ne.prototype,"analysisViewData",void 0),(0,s._)([(0,o.MZ)({readOnly:!0})],Ne.prototype,"areaLabel",void 0),(0,s._)([(0,o.MZ)({readOnly:!0})],Ne.prototype,"perimeterLengthLabel",void 0),(0,s._)([(0,o.MZ)()],Ne.prototype,"loadingMessages",void 0),(0,s._)([(0,o.MZ)()],Ne.prototype,"visible",null),(0,s._)([(0,o.MZ)()],Ne.prototype,"_renderUnits",null),Ne=(0,s._)([(0,l.$)("esri.views.3d.analysis.AreaMeasurement.support.AreaMeasurementVisualization")],Ne),function(e){e[e.Small=12]="Small",e[e.Large=16]="Large"}(je||(je={}));const $e={validMeasurement:!1,numVertices:0,hasStagedVertex:!1,path:null,mode:null,positionsRender:null,positionsFittedWorld:null,positionsFittedRender:null,intersectingSegments:null,triangleIndices:null,areaCentroid:null,perimeterLengthLabelSegmentIndex:null,checkerSize:null,area:null,pathLength:null,perimeterLength:null};let Qe=class extends((0,d.P)(n.A)){constructor(e){super(e),this.type="area-measurement-view-3d",this.analysis=null,this.measurementData=null,this.lastDraggedVertex=null,this.stagedPoint=null,this.mode=c.G.Auto}initialize(){const{analysis:e,view:t}=this;this.path=new te({view:t,areaMeasurement:e}),this.analysisVisualization=new Ne({view:t,analysis:e,analysisViewData:this}),this.analysisController=new j({view:t,analysis:e,analysisViewData:this})}destroy(){this.analysisController=(0,r.pR)(this.analysisController),this.analysisVisualization=(0,r.pR)(this.analysisVisualization),this.path.destroy()}get updating(){return!!this.analysisVisualization?.loadingMessages}get result(){const{measurementData:e}=this;return null==e?{area:null,mode:null,perimeter:null}:"euclidean"===e.actualMeasurementMode?{area:e.area,perimeter:e.perimeterLength,mode:"euclidean"}:{area:e.geodesicArea,perimeter:e.pathLength,mode:"geodesic"}}get viewData(){return this.analysisVisualization.viewData}get validMeasurement(){return this.path.isValidPolygon}get unit(){return this.analysis.unit??this._defaultUnit}get testData(){}};(0,s._)([(0,o.MZ)({readOnly:!0})],Qe.prototype,"type",void 0),(0,s._)([(0,o.MZ)({constructOnly:!0,nonNullable:!0})],Qe.prototype,"analysis",void 0),(0,s._)([(0,o.MZ)()],Qe.prototype,"updating",null),(0,s._)([(0,o.MZ)()],Qe.prototype,"analysisVisualization",void 0),(0,s._)([(0,o.MZ)()],Qe.prototype,"analysisController",void 0),(0,s._)([(0,o.MZ)()],Qe.prototype,"result",null),(0,s._)([(0,o.MZ)()],Qe.prototype,"measurementData",void 0),(0,s._)([(0,o.MZ)()],Qe.prototype,"viewData",null),(0,s._)([(0,o.MZ)()],Qe.prototype,"validMeasurement",null),(0,s._)([(0,o.MZ)()],Qe.prototype,"path",void 0),(0,s._)([(0,o.MZ)()],Qe.prototype,"lastDraggedVertex",void 0),(0,s._)([(0,o.MZ)()],Qe.prototype,"stagedPoint",void 0),(0,s._)([(0,o.MZ)()],Qe.prototype,"mode",void 0),(0,s._)([(0,o.MZ)()],Qe.prototype,"unit",null),(0,s._)([(0,o.MZ)(h.q)],Qe.prototype,"_defaultUnit",void 0),Qe=(0,s._)([(0,l.$)("esri.views.3d.analysis.AreaMeasurementAnalysisView3D")],Qe);const Je=Qe},78009:(e,t,i)=>{i.d(t,{EI:()=>u,lO:()=>v,qh:()=>p,u0:()=>f});var s=i(24648),n=i(31633),r=i(38983),o=i(20664),a=i(9392),l=i(14487),h=i(13927),d=i(45097),c=i(41868);function u(e){return g(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:{positionsWorldCoords:[]})}function p(e){return g(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:{positionsWorldCoords:[]},!1)}function g(e,t){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e.hasZ;const r=(0,c.l)(e.spatialReference),u=(0,n.B5)(r);if(null==u)return null;const p=(e,t)=>!(t.length<2)&&((0,o.s)(e,t[0],t[1],i&&t[2]||0),!0);let g=0;for(const s of e.rings){const i=s.length;if(i<3)continue;const{positionsWorldCoords:n}=t;for(;n.length<i;)n.push((0,a.vt)());const c=m,u=(0,o.s)(_,0,0,0),f=1/i;for(let t=0;t<i;t++){if(!p(c,s[t]))return null;if(!(0,l.F)(c,e.spatialReference,n[t],r))return null;(0,o.r)(u,u,n[t],f)}const y=(0,h.Cr)(n[0],n[1],u,(0,h.LV)());if(0===(0,o.q)((0,h.Qj)(y)))continue;for(let e=0;e<i;e++)(0,h.Z1)(y,u,n[e],n[e]);const w=v(n);for(let e=0;e<w.length;e+=3)g+=(0,d.Fm)(n[w[e]],n[w[e+1]],n[w[e+2]])}return(0,s.gT)(g,u)}const m=(0,a.vt)(),_=(0,a.vt)();function f(){return{positionsWorldCoords:[]}}function v(e){return(0,r.e)(function(e){const t=new Float64Array(2*e.length);for(let i=0;i<e.length;++i){const s=e[i],n=2*i;t[n]=s[0],t[n+1]=s[1]}return t}(e),[],2)}},66678:(e,t,i)=>{i.d(t,{P:()=>a});var s=i(24648),n=i(63391),r=i(7137),o=i(90659);function a(e){const{spatialReference:t}=e;return(0,o.M0)(t,l,h,e)}function l(e){return(0,s.gT)(Math.abs((0,r.qy)([e],"square-meters")[0]),"square-meters")}function h(e){try{return(0,s.gT)(Math.abs((0,n.geodesicArea)(e,"square-meters")),"square-meters")}catch(t){return null}}},74050:(e,t,i)=>{i.d(t,{Dh:()=>l,IB:()=>d,Vv:()=>s,fg:()=>a,jI:()=>h});i(15941);var s,n=i(19555),r=i(72745);function o(e,t){return e[0]*t[1]-e[1]*t[0]}function a(e,t,i,s){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:i;return(0,n.Re)(u,s,i),(0,n.Re)(g,t,r),function(e,t,i){const s=(0,n.Om)(i,t)/(0,n.m3)(i);(0,n.hs)(e,i,s)}(m,g,u),(0,n.WQ)(e,r,m)}function l(e,t,i,s){(0,n.Re)(u,t,i);const r=s/(0,n.Bw)(u);return(0,n.Ln)(e,i,u,r)}function h(e,t){const i=e.start,r=e.end,a=t.start,l=t.end,h=(0,n.Re)(u,r,i),d=(0,n.Re)(p,l,a),_=o(h,d);if(Math.abs(_)<=c)return[];const f=(0,n.Re)(g,i,a),v=o(d,f)/_,y=o(h,f)/_;if(v>=0){if(y>=0||t.type===s.LINE)return[(0,n.Ln)(m,i,h,v)]}else if(e.type===s.LINE&&(y>=0||t.type===s.LINE))return[(0,n.Ln)(m,i,h,v)];return[]}function d(e,t,i){const r=[],o=(0,n.Re)(u,e.end,e.start),a=(0,n.Re)(p,e.start,t),l=(0,n.m3)(o),h=2*(0,n.Om)(o,a),d=h*h-4*l*((0,n.m3)(a)-i*i);if(0===d){const t=-h/(2*l);(e.type===s.LINE||t>=0)&&r.push((0,n.Ln)(m,e.start,o,t))}else if(d>0){const t=Math.sqrt(d),i=(-h+t)/(2*l);(e.type===s.LINE||i>=0)&&r.push((0,n.Ln)(m,e.start,o,i));const a=(-h-t)/(2*l);(e.type===s.LINE||a>=0)&&r.push((0,n.Ln)(g,e.start,o,a))}return r}!function(e){e[e.RAY=0]="RAY",e[e.LINE=1]="LINE"}(s||(s={}));const c=1e-6,u=(0,r.vt)(),p=(0,r.vt)(),g=(0,r.vt)(),m=(0,r.vt)()}}]);
//# sourceMappingURL=6349.5e5d788d.chunk.js.map